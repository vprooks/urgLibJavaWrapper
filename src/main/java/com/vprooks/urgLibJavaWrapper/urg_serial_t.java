package com.vprooks.urgLibJavaWrapper;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : urg_serial.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class urg_serial_t extends Structure {
    /**
     * !<  Connection resource<br>
     * C type : HANDLE
     */
    public UrgLib.HANDLE hCom;
    /**
     * !<  Timeout configuration value
     */
    public int current_timeout;
    /**
     * !<  Ring buffer structure<br>
     * C type : ring_buffer_t
     */
    public ring_buffer_t ring;
    /**
     * !<  Data buffer<br>
     * C type : char[RING_BUFFER_SIZE]
     */
    public byte[] buffer = new byte[(int) UrgLib.RING_BUFFER_SIZE];
    /**
     * !<  Whether the last character was received or not
     */
    public byte has_last_ch;
    /**
     * !<  Last character received
     */
    public byte last_ch;

    public urg_serial_t() {
        super();
    }

    protected List<?> getFieldOrder() {
        return Arrays.asList("hCom", "current_timeout", "ring", "buffer", "has_last_ch", "last_ch");
    }

    /**
     * @param hCom            !<  Connection resource<br>
     *                        C type : HANDLE<br>
     * @param current_timeout !<  Timeout configuration value<br>
     * @param ring            !<  Ring buffer structure<br>
     *                        C type : ring_buffer_t<br>
     * @param buffer          !<  Data buffer<br>
     *                        C type : char[RING_BUFFER_SIZE]<br>
     * @param has_last_ch     !<  Whether the last character was received or not<br>
     * @param last_ch         !<  Last character received
     */
    public urg_serial_t(UrgLib.HANDLE hCom, int current_timeout, ring_buffer_t ring, byte buffer[], byte has_last_ch, byte last_ch) {
        super();
        this.hCom = hCom;
        this.current_timeout = current_timeout;
        this.ring = ring;
        if ((buffer.length != this.buffer.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.buffer = buffer;
        this.has_last_ch = has_last_ch;
        this.last_ch = last_ch;
    }

    public urg_serial_t(Pointer peer) {
        super(peer);
    }

    public static class ByReference extends urg_serial_t implements Structure.ByReference {

    }

    public static class ByValue extends urg_serial_t implements Structure.ByValue {

    }
}
